{
    "api_version": [
        0,
        4
    ],
    "course": {
        "description": "Playful intro to programming",
        "edit_info": {
            "branch": "snake-ep-2023",
            "url": "https://github.com/encukou/snake-workshop"
        },
        "lessons": {
            "beginners/cmdline": {
                "pages": {
                    "index": {
                        "attribution": [
                            "Based on the <a href=\"https://tutorial.djangogirls.org/en/intro_to_command_line/\">Django Girls tutorial</a>.",
                            "Written by Petr Viktorin for PyLadies Brno, 2014-2023.",
                            "Initial translation back to English by Petra Vidnerová and Karolina Surma, based on ChatGPT"
                        ],
                        "content": {
                            "path": "cmdline/index.html"
                        },
                        "ids": [
                            "changing_the_current_directory",
                            "command_line",
                            "copying_from_the_command_line",
                            "creating_a_directory",
                            "current_directory",
                            "font_size",
                            "inserting_back_into_the_command_line",
                            "observing_changes",
                            "one_level_up",
                            "opening_in_a_file_browser",
                            "opening_the_command_line",
                            "overview",
                            "the_end",
                            "using_a_graphical_window",
                            "what_is_in_the_directory",
                            "what_is_the_command_line",
                            "your_first_command"
                        ],
                        "license": "cc-by-sa-40",
                        "links": [
                            "#changing_the_current_directory",
                            "#command_line",
                            "#copying_from_the_command_line",
                            "#creating_a_directory",
                            "#current_directory",
                            "#font_size",
                            "#inserting_back_into_the_command_line",
                            "#observing_changes",
                            "#one_level_up",
                            "#opening_in_a_file_browser",
                            "#opening_the_command_line",
                            "#overview",
                            "#the_end",
                            "#using_a_graphical_window",
                            "#what_is_in_the_directory",
                            "#what_is_the_command_line",
                            "#your_first_command",
                            "naucse:static?filename=linux-file-browser.png",
                            "naucse:static?filename=macos-file-browser.png",
                            "naucse:static?filename=windows-cmd-properties.png",
                            "naucse:static?filename=windows-file-browser.png"
                        ],
                        "slug": "index",
                        "solutions": [],
                        "source_file": "lessons/beginners/cmdline/index.md",
                        "title": "Command line",
                        "vars": {}
                    }
                },
                "source_file": "lessons/beginners/cmdline/info.yml",
                "static_files": {
                    "linux-file-browser.png": {
                        "path": "cmdline/linux-file-browser.png"
                    },
                    "macos-file-browser.png": {
                        "path": "cmdline/macos-file-browser.png"
                    },
                    "windows-cmd-properties.png": {
                        "path": "cmdline/windows-cmd-properties.png"
                    },
                    "windows-file-browser.png": {
                        "path": "cmdline/windows-file-browser.png"
                    }
                },
                "title": "Command line"
            },
            "beginners/install": {
                "pages": {
                    "index": {
                        "attribution": [
                            "Written by Petr Viktorin for PyLadies Brno, 2014-2023.",
                            "Initial translation to English by Petra Vidnerová and Karolina Surma, based on ChatGPT"
                        ],
                        "content": {
                            "path": "install/index.html"
                        },
                        "ids": [
                            "installing_python"
                        ],
                        "license": "cc-by-sa-40",
                        "links": [
                            "#installing_python",
                            "naucse:page?lesson=beginners/install&page=linux",
                            "naucse:page?lesson=beginners/install&page=macos",
                            "naucse:page?lesson=beginners/install&page=windows"
                        ],
                        "slug": "index",
                        "solutions": [],
                        "source_file": "lessons/beginners/install/index.md",
                        "title": "Python installation",
                        "vars": {}
                    },
                    "linux": {
                        "attribution": [
                            "Written by Petr Viktorin for PyLadies Brno, 2014-2023.",
                            "Initial translation to English by Petra Vidnerová and Karolina Surma, based on ChatGPT"
                        ],
                        "content": {
                            "path": "install/linux.html"
                        },
                        "ids": [
                            "check-tkinter",
                            "checking_tkinter",
                            "install-virtualenv",
                            "installing_python_3",
                            "installing_python_on_linux",
                            "installing_venv"
                        ],
                        "license": "cc-by-sa-40",
                        "links": [
                            "#check-tkinter",
                            "#checking_tkinter",
                            "#install-virtualenv",
                            "#installing_python_3",
                            "#installing_python_on_linux",
                            "#installing_venv"
                        ],
                        "slug": "linux",
                        "solutions": [],
                        "source_file": "lessons/beginners/install/linux.md",
                        "subtitle": "Linux",
                        "title": "Python installation – Linux",
                        "vars": {}
                    },
                    "macos": {
                        "attribution": [
                            "Written by Petr Viktorin for PyLadies Brno, 2014-2023.",
                            "Initial translation to English by Petra Vidnerová and Karolina Surma, based on ChatGPT"
                        ],
                        "content": {
                            "path": "install/macos.html"
                        },
                        "ids": [
                            "installing_python_for_macos"
                        ],
                        "license": "cc-by-sa-40",
                        "links": [
                            "#installing_python_for_macos",
                            "http://brew.sh"
                        ],
                        "slug": "macos",
                        "solutions": [],
                        "source_file": "lessons/beginners/install/macos.md",
                        "subtitle": "macOS",
                        "title": "Python installation – macOS",
                        "vars": {}
                    },
                    "windows": {
                        "attribution": [
                            "Written by Petr Viktorin for PyLadies Brno, 2014-2023.",
                            "Initial translation to English by Petra Vidnerová and Karolina Surma, based on ChatGPT"
                        ],
                        "content": {
                            "path": "install/windows.html"
                        },
                        "ids": [
                            "installing_python_for_windows",
                            "older_windows_or_existing_python"
                        ],
                        "license": "cc-by-sa-40",
                        "links": [
                            "#installing_python_for_windows",
                            "#older_windows_or_existing_python",
                            "https://www.python.org/downloads/",
                            "naucse:static?filename=windows_32v64-bit.png",
                            "naucse:static?filename=windows_add_python_to_path.png"
                        ],
                        "slug": "windows",
                        "solutions": [],
                        "source_file": "lessons/beginners/install/windows.md",
                        "subtitle": "Windows",
                        "title": "Python installation – Windows",
                        "vars": {}
                    }
                },
                "source_file": "lessons/beginners/install/info.yml",
                "static_files": {
                    "windows_32v64-bit.png": {
                        "path": "install/windows_32v64-bit.png"
                    },
                    "windows_add_python_to_path.png": {
                        "path": "install/windows_add_python_to_path.png"
                    }
                },
                "title": "Python installation"
            },
            "beginners/install-editor": {
                "pages": {
                    "gedit": {
                        "attribution": [
                            "Written for PyLadies Brno by Petr Viktorin (2014-2023) and Tomáš Roj (2019).",
                            "Initial translation to English by Petra Vidnerová and Karolina Surma, based on ChatGPT"
                        ],
                        "content": {
                            "path": "install-editor/gedit.html"
                        },
                        "ids": [
                            "indentation_practice",
                            "installation_of_gedit",
                            "setup"
                        ],
                        "license": "cc-by-sa-40",
                        "links": [
                            "#indentation_practice",
                            "#installation_of_gedit",
                            "#setup",
                            "https://wiki.gnome.org/Apps/Gedit",
                            "naucse:static?filename=gedit_indent.png",
                            "naucse:static?filename=gedit_linenums.png",
                            "naucse:static?filename=gedit_prefs.png"
                        ],
                        "slug": "gedit",
                        "solutions": [],
                        "source_file": "lessons/beginners/install-editor/gedit.md",
                        "subtitle": "Gedit",
                        "title": "Gedit installation",
                        "vars": {}
                    },
                    "index": {
                        "attribution": [
                            "Written for PyLadies Brno by Petr Viktorin (2014-2023) and Tomáš Roj (2019).",
                            "Initial translation to English by Petra Vidnerová and Karolina Surma, based on ChatGPT"
                        ],
                        "content": {
                            "path": "install-editor/index.html"
                        },
                        "ids": [
                            "editor_installation",
                            "editor_selection_and_settings",
                            "ide",
                            "what_a_programmers_text_editor_can_do"
                        ],
                        "license": "cc-by-sa-40",
                        "links": [
                            "#editor_installation",
                            "#editor_selection_and_settings",
                            "#ide",
                            "#what_a_programmers_text_editor_can_do",
                            "https://eclipse.org/",
                            "https://www.jetbrains.com/pycharm/",
                            "https://www.kdevelop.org/",
                            "naucse:page?lesson=beginners/install-editor&page=gedit",
                            "naucse:page?lesson=beginners/install-editor&page=kate",
                            "naucse:page?lesson=beginners/install-editor&page=notepad-plus-plus",
                            "naucse:page?lesson=beginners/install-editor&page=others",
                            "naucse:page?lesson=beginners/install-editor&page=vscode"
                        ],
                        "slug": "index",
                        "solutions": [],
                        "source_file": "lessons/beginners/install-editor/index.md",
                        "title": "Editor installation",
                        "vars": {}
                    },
                    "kate": {
                        "attribution": [
                            "Written for PyLadies Brno by Petr Viktorin (2014-2023) and Tomáš Roj (2019).",
                            "Initial translation to English by Petra Vidnerová and Karolina Surma, based on ChatGPT"
                        ],
                        "content": {
                            "path": "install-editor/kate.html"
                        },
                        "ids": [
                            "indentation_practice",
                            "installation_of_kate",
                            "setup"
                        ],
                        "license": "cc-by-sa-40",
                        "links": [
                            "#indentation_practice",
                            "#installation_of_kate",
                            "#setup",
                            "https://kate-editor.org/get-it/"
                        ],
                        "slug": "kate",
                        "solutions": [],
                        "source_file": "lessons/beginners/install-editor/kate.md",
                        "subtitle": "Kate",
                        "title": "Kate installation",
                        "vars": {}
                    },
                    "notepad-plus-plus": {
                        "attribution": [
                            "Written for PyLadies Brno by Petr Viktorin (2014-2023) and Tomáš Roj (2019).",
                            "Initial translation to English by Petra Vidnerová and Karolina Surma, based on ChatGPT"
                        ],
                        "content": {
                            "path": "install-editor/notepad-plus-plus.html"
                        },
                        "ids": [
                            "indentation_practice",
                            "installation_of_notepad",
                            "setup"
                        ],
                        "license": "cc-by-sa-40",
                        "links": [
                            "#indentation_practice",
                            "#installation_of_notepad",
                            "#setup",
                            "https://notepad-plus-plus.org/"
                        ],
                        "slug": "notepad-plus-plus",
                        "solutions": [],
                        "source_file": "lessons/beginners/install-editor/notepad-plus-plus.md",
                        "subtitle": "Notepad++",
                        "title": "Notepad++ installation",
                        "vars": {}
                    },
                    "others": {
                        "attribution": [
                            "Written for PyLadies Brno by Petr Viktorin (2014-2023) and Tomáš Roj (2019).",
                            "Initial translation to English by Petra Vidnerová and Karolina Surma, based on ChatGPT"
                        ],
                        "content": {
                            "path": "install-editor/others.html"
                        },
                        "ids": [
                            "checking_the_style_of_source_code",
                            "editor_installation",
                            "indentation",
                            "indentation_practice",
                            "line_numbering",
                            "setup",
                            "syntax_highlighting"
                        ],
                        "license": "cc-by-sa-40",
                        "links": [
                            "#checking_the_style_of_source_code",
                            "#editor_installation",
                            "#indentation",
                            "#indentation_practice",
                            "#line_numbering",
                            "#setup",
                            "#syntax_highlighting",
                            "https://www.python.org/dev/peps/pep-0008/"
                        ],
                        "slug": "others",
                        "solutions": [],
                        "source_file": "lessons/beginners/install-editor/others.md",
                        "subtitle": "Setup",
                        "title": "Editor setup",
                        "vars": {}
                    },
                    "vscode": {
                        "attribution": [
                            "Written for PyLadies Brno by Petr Viktorin (2014-2023) and Tomáš Roj (2019).",
                            "Initial translation to English by Petra Vidnerová and Karolina Surma, based on ChatGPT"
                        ],
                        "content": {
                            "path": "install-editor/vscode.html"
                        },
                        "ids": [
                            "download_and_installation",
                            "indentation_practice",
                            "installation_of_visual_studio_code",
                            "sending_telemetry_data",
                            "setup"
                        ],
                        "license": "cc-by-sa-40",
                        "links": [
                            "#download_and_installation",
                            "#indentation_practice",
                            "#installation_of_visual_studio_code",
                            "#sending_telemetry_data",
                            "#setup",
                            "https://code.visualstudio.com/",
                            "https://code.visualstudio.com/docs/supporting/faq#_how-to-disable-telemetry-reporting",
                            "https://privacy.microsoft.com/en-us/privacystatement"
                        ],
                        "slug": "vscode",
                        "solutions": [],
                        "source_file": "lessons/beginners/install-editor/vscode.md",
                        "subtitle": "Visual Studio Code",
                        "title": "Visual Studio Code installation",
                        "vars": {}
                    }
                },
                "source_file": "lessons/beginners/install-editor/info.yml",
                "static_files": {
                    "gedit_indent.png": {
                        "path": "install-editor/gedit_indent.png"
                    },
                    "gedit_linenums.png": {
                        "path": "install-editor/gedit_linenums.png"
                    },
                    "gedit_prefs.png": {
                        "path": "install-editor/gedit_prefs.png"
                    }
                },
                "title": "Editor installation"
            },
            "beginners/venv-setup": {
                "pages": {
                    "index": {
                        "attribution": [
                            "Written by Petr Viktorin for PyLadies Brno, 2014-2023.",
                            "Initial translation to English by Petra Vidnerová and Karolina Surma, based on ChatGPT"
                        ],
                        "content": {
                            "path": "venv-setup/index.html"
                        },
                        "ids": [
                            "a_directory_for_the_workshop",
                            "activation_of_the_virtual_environment",
                            "environment_setup",
                            "linux",
                            "macos",
                            "preparing_a_directory",
                            "switching_to_the_directory",
                            "virtual_environment",
                            "windows"
                        ],
                        "license": "cc-by-sa-40",
                        "links": [
                            "#a_directory_for_the_workshop",
                            "#activation_of_the_virtual_environment",
                            "#environment_setup",
                            "#linux",
                            "#macos",
                            "#preparing_a_directory",
                            "#switching_to_the_directory",
                            "#virtual_environment",
                            "#windows",
                            "naucse:static?filename=dirs-00.png"
                        ],
                        "slug": "index",
                        "solutions": [],
                        "source_file": "lessons/beginners/venv-setup/index.md",
                        "title": "Virtual environment setup",
                        "vars": {}
                    }
                },
                "source_file": "lessons/beginners/venv-setup/info.yml",
                "static_files": {
                    "dirs-00.png": {
                        "path": "venv-setup/dirs-00.png"
                    },
                    "dirs.png": {
                        "path": "venv-setup/dirs.png"
                    }
                },
                "title": "Virtual environment setup"
            },
            "fast-track/bool": {
                "pages": {
                    "index": {
                        "attribution": [
                            "Based on the <a href=\"https://djangogirls.org/\">DjangoGirls tutorial</a>.",
                            "Partially based on the <a href=\"https://github.com/ggcarrots/django-carrots\">Geek Girls Carrots course</a>.",
                            "Translated to Czech by a group of volunteers.\nAmong others: David (dakf), Kristýna Kumpánová,\nVeronika Gabrielová, Tomáš Ehrlich, Anička Jaegerová,\nMatěj Stuchlík, Filip Sivák, Juraj M. Bezruček.",
                            "Edited for PyLadies CZ by Petr Viktorin, 2018.",
                            "Initial translation back to English by Petra Vidnerová, based on ChatGPT"
                        ],
                        "content": {
                            "path": "bool/index.html"
                        },
                        "ids": [
                            "comparing_things",
                            "logic",
                            "presence",
                            "solution-0",
                            "summary",
                            "truth_values"
                        ],
                        "license": "cc-by-sa-40",
                        "links": [
                            "#comparing_things",
                            "#logic",
                            "#presence",
                            "#summary",
                            "#truth_values",
                            "https://tutorial.djangogirls.org/en/",
                            "naucse:solution?solution=0"
                        ],
                        "slug": "index",
                        "solutions": [
                            {
                                "content": "<div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"mi\">1</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;krajta&#39;</span>\n<span class=\"go\">False</span>\n</pre></div><p>You can't compare apples and pears, but you can confirm that they are two different things.</p>"
                            }
                        ],
                        "source_file": "lessons/fast-track/bool/index.md",
                        "title": "Comparison and logic",
                        "vars": {}
                    }
                },
                "source_file": "lessons/fast-track/bool/info.yml",
                "static_files": {},
                "title": "Comparison and logic"
            },
            "fast-track/class": {
                "pages": {
                    "index": {
                        "attribution": [
                            "Written by Petr Viktorin for PyLadies Brno, 2015-2019.",
                            "Initial translation to English by Petra Vidnerová, based on ChatGPT"
                        ],
                        "content": {
                            "path": "class/index.html"
                        },
                        "ids": [
                            "attributes",
                            "classes",
                            "parameter_codeselfcode",
                            "summary"
                        ],
                        "license": "cc-by-sa-40",
                        "links": [
                            "#attributes",
                            "#classes",
                            "#parameter_codeselfcode",
                            "#summary"
                        ],
                        "slug": "index",
                        "solutions": [],
                        "source_file": "lessons/fast-track/class/index.md",
                        "title": "Classes",
                        "vars": {}
                    }
                },
                "source_file": "lessons/fast-track/class/info.yml",
                "static_files": {},
                "title": "Classes"
            },
            "fast-track/conversion": {
                "pages": {
                    "index": {
                        "attribution": [
                            "Based on the <a href=\"https://djangogirls.org/\">DjangoGirls tutorial</a>.",
                            "Partially based on the <a href=\"https://github.com/ggcarrots/django-carrots\">Geek Girls Carrots course</a>.",
                            "Translated to Czech by a group of volunteers.\nAmong others: David (dakf), Kristýna Kumpánová,\nVeronika Gabrielová, Tomáš Ehrlich, Anička Jaegerová,\nMatěj Stuchlík, Filip Sivák, Juraj M. Bezruček.",
                            "Edited for PyLadies CZ by Petr Viktorin, 2018.",
                            "Initial translation back to English by Petra Vidnerová and Karolina Surma, based on ChatGPT"
                        ],
                        "content": {
                            "path": "conversion/index.html"
                        },
                        "ids": [
                            "solution-0",
                            "type_conversion"
                        ],
                        "license": "cc-by-sa-40",
                        "links": [
                            "#type_conversion",
                            "https://tutorial.djangogirls.org/en/",
                            "naucse:solution?solution=0"
                        ],
                        "slug": "index",
                        "solutions": [
                            {
                                "content": "<p>An error will occur!</p>\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"s1\">&#39;hello&#39;</span><span class=\"p\">)</span>\n<span class=\"gt\">Traceback (most recent call last):</span>\n  File <span class=\"nb\">&quot;&lt;stdin&gt;&quot;</span>, line <span class=\"m\">1</span>, in <span class=\"n\">&lt;module&gt;</span>\n<span class=\"gr\">ValueError</span>: <span class=\"n\">invalid literal for int() with base 10: &#39;hello&#39;</span>\n</pre></div><p>The sentence contains useful information.\nThe most important thing is the <code>ValueError</code>, which indicates an error in the value.</p>"
                            }
                        ],
                        "source_file": "lessons/fast-track/conversion/index.md",
                        "title": "Type conversion",
                        "vars": {}
                    }
                },
                "source_file": "lessons/fast-track/conversion/info.yml",
                "static_files": {},
                "title": "Type conversion"
            },
            "fast-track/def": {
                "pages": {
                    "index": {
                        "attribution": [
                            "Based on the <a href=\"https://djangogirls.org/\">DjangoGirls tutorial</a>.",
                            "Partially based on the <a href=\"https://github.com/ggcarrots/django-carrots\">Geek Girls Carrots course</a>.",
                            "Translated to Czech by a group of volunteers.\nAmong others: David (dakf), Kristýna Kumpánová,\nVeronika Gabrielová, Tomáš Ehrlich, Anička Jaegerová,\nMatěj Stuchlík, Filip Sivák, Juraj M. Bezruček.",
                            "Edited for PyLadies CZ by Petr Viktorin, 2018.",
                            "Initial translation back to English by Petra Vidnerová, based on ChatGPT"
                        ],
                        "content": {
                            "path": "def/index.html"
                        },
                        "ids": [
                            "own_function",
                            "parameters",
                            "returning",
                            "solution-0",
                            "solution-1",
                            "solution-2",
                            "solution-3",
                            "solution-4",
                            "summary"
                        ],
                        "license": "cc-by-sa-40",
                        "links": [
                            "#own_function",
                            "#parameters",
                            "#returning",
                            "#summary",
                            "https://tutorial.djangogirls.org/en/",
                            "naucse:solution?solution=0",
                            "naucse:solution?solution=1",
                            "naucse:solution?solution=2",
                            "naucse:solution?solution=3",
                            "naucse:solution?solution=4"
                        ],
                        "slug": "index",
                        "solutions": [
                            {
                                "content": "<p>Each call triggers the body of the function again.</p>\n<div class=\"highlight\"><pre><code>(venv) $ python python_intro.py\nHello!\nHow are you?\nHello!\nHow are you?\nHello!\nHow are you?</code></pre></div>"
                            },
                            {
                                "content": "<div class=\"highlight\"><pre><span></span><span class=\"gt\">Traceback (most recent call last):</span>\n  File <span class=\"nb\">&quot;&lt;stdin&gt;&quot;</span>, line <span class=\"m\">1</span>, in <span class=\"n\">&lt;module&gt;</span>\n<span class=\"gr\">NameError</span>: <span class=\"n\">name &#39;pozdrav&#39; is not defined</span>\n</pre></div><p>Python complains about <code>NameError</code> - it doesn't recognize anything called <code>pozdrav</code>.</p>\n<p>Python reads the program from top to bottom. It \"learns\" how to greet with the <code>def</code> command. Before it reaches the <code>def</code> command, the function does not exist.</p>"
                            },
                            {
                                "content": "<div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">greeting</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Hello,&#39;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n\n<span class=\"n\">greeting</span><span class=\"p\">(</span><span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s1\">&#39;What&#39;</span><span class=\"n\">s</span> <span class=\"n\">your</span> <span class=\"n\">name</span><span class=\"err\">?</span><span class=\"s1\">&#39;))</span>\n</pre></div>"
                            },
                            {
                                "content": "<div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">greeting</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Welcome,&#39;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n\n<span class=\"n\">greeting</span><span class=\"p\">()</span>\n</pre></div><div class=\"highlight\"><pre><span></span><span class=\"gt\">Traceback (most recent call last):</span>\n  File <span class=\"nb\">&quot;&lt;stdin&gt;&quot;</span>, line <span class=\"m\">9</span>, in <span class=\"n\">&lt;module&gt;</span>\n<span class=\"gr\">TypeError</span>: <span class=\"n\">greeting() missing 1 required positional argument: &#39;name&#39;</span>\n</pre></div><p>Python complains about <code>TypeError</code> - the function <code>pozdrav</code> did not receive the mandatory argument <code>name</code>.</p>"
                            },
                            {
                                "content": "<div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">paty_pad</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;Hubert&#39;</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"s1\">&#39;Huberte&#39;</span>\n    <span class=\"k\">elif</span> <span class=\"n\">name</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;a&#39;</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">name</span><span class=\"p\">[:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;o&#39;</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">name</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">greeting</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Welcome,&#39;</span><span class=\"p\">,</span> <span class=\"n\">paty_pad</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">))</span>\n\n<span class=\"n\">greeting</span><span class=\"p\">(</span><span class=\"s1\">&#39;Hubert&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">greeting</span><span class=\"p\">(</span><span class=\"s1\">&#39;Ola&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">greeting</span><span class=\"p\">(</span><span class=\"s1\">&#39;Soňa&#39;</span><span class=\"p\">)</span>\n</pre></div>"
                            }
                        ],
                        "source_file": "lessons/fast-track/def/index.md",
                        "title": "Defining functions",
                        "vars": {}
                    }
                },
                "source_file": "lessons/fast-track/def/info.yml",
                "static_files": {},
                "title": "Defining functions"
            },
            "fast-track/dict": {
                "pages": {
                    "index": {
                        "attribution": [
                            "Based on the <a href=\"https://djangogirls.org/\">DjangoGirls tutorial</a>.",
                            "Partially based on the <a href=\"https://github.com/ggcarrots/django-carrots\">Geek Girls Carrots course</a>.",
                            "Translated to Czech by a group of volunteers.\nAmong others: David (dakf), Kristýna Kumpánová,\nVeronika Gabrielová, Tomáš Ehrlich, Anička Jaegerová,\nMatěj Stuchlík, Filip Sivák, Juraj M. Bezruček.",
                            "Edited for PyLadies CZ by Petr Viktorin, 2018.",
                            "Initial translation back to English by Petra Vidnerová, based on ChatGPT"
                        ],
                        "content": {
                            "path": "dict/index.html"
                        },
                        "ids": [
                            "dictionaries",
                            "modifying_dictionaries",
                            "solution-0",
                            "summary",
                            "to_think_about"
                        ],
                        "license": "cc-by-sa-40",
                        "links": [
                            "#dictionaries",
                            "#modifying_dictionaries",
                            "#summary",
                            "#to_think_about",
                            "https://tutorial.djangogirls.org/en/",
                            "naucse:solution?solution=0"
                        ],
                        "slug": "index",
                        "solutions": [
                            {
                                "content": "<p>More values can be stored in a list.\nThe values will be lists of numbers:</p>\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">contacts</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;Katka&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;4925219&#39;</span><span class=\"p\">],</span> <span class=\"s1\">&#39;Jirka&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;7477058&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;3251156&#39;</span><span class=\"p\">],</span> <span class=\"s1\">&#39;Verča&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;1019103&#39;</span><span class=\"p\">]}</span>\n</pre></div>"
                            }
                        ],
                        "source_file": "lessons/fast-track/dict/index.md",
                        "title": "Dictionaries",
                        "vars": {}
                    }
                },
                "source_file": "lessons/fast-track/dict/info.yml",
                "static_files": {},
                "title": "Dictionaries"
            },
            "fast-track/for": {
                "pages": {
                    "index": {
                        "attribution": [
                            "Based on the <a href=\"https://djangogirls.org/\">DjangoGirls tutorial</a>.",
                            "Partially based on the <a href=\"https://github.com/ggcarrots/django-carrots\">Geek Girls Carrots course</a>.",
                            "Translated to Czech by a group of volunteers.\nAmong others: David (dakf), Kristýna Kumpánová,\nVeronika Gabrielová, Tomáš Ehrlich, Anička Jaegerová,\nMatěj Stuchlík, Filip Sivák, Juraj M. Bezruček.",
                            "Edited for PyLadies CZ by Petr Viktorin, 2018.",
                            "Initial translation back to English by Petra Vidnerová, based on ChatGPT"
                        ],
                        "content": {
                            "path": "for/index.html"
                        },
                        "ids": [
                            "cycles",
                            "repeat_varnvar_times",
                            "summary"
                        ],
                        "license": "cc-by-sa-40",
                        "links": [
                            "#cycles",
                            "#repeat_varnvar_times",
                            "#summary",
                            "https://tutorial.djangogirls.org/en/"
                        ],
                        "slug": "index",
                        "solutions": [],
                        "source_file": "lessons/fast-track/for/index.md",
                        "title": "Loops",
                        "vars": {}
                    }
                },
                "source_file": "lessons/fast-track/for/info.yml",
                "static_files": {},
                "title": "Loops"
            },
            "fast-track/if": {
                "pages": {
                    "index": {
                        "attribution": [
                            "Based on the <a href=\"https://djangogirls.org/\">DjangoGirls tutorial</a>.",
                            "Partially based on the <a href=\"https://github.com/ggcarrots/django-carrots\">Geek Girls Carrots course</a>.",
                            "Translated to Czech by a group of volunteers.\nAmong others: David (dakf), Kristýna Kumpánová,\nVeronika Gabrielová, Tomáš Ehrlich, Anička Jaegerová,\nMatěj Stuchlík, Filip Sivák, Juraj M. Bezruček.",
                            "Edited for PyLadies CZ by Petr Viktorin, 2018.",
                            "Initial translation back to English by Petra Vidnerová, based on ChatGPT"
                        ],
                        "content": {
                            "path": "if/index.html"
                        },
                        "ids": [
                            "conditions",
                            "else",
                            "if_-_then",
                            "indenting",
                            "more_options",
                            "summary"
                        ],
                        "license": "cc-by-sa-40",
                        "links": [
                            "#conditions",
                            "#else",
                            "#if_-_then",
                            "#indenting",
                            "#more_options",
                            "#summary",
                            "https://tutorial.djangogirls.org/en/"
                        ],
                        "slug": "index",
                        "solutions": [],
                        "source_file": "lessons/fast-track/if/index.md",
                        "title": "Conditions",
                        "vars": {}
                    }
                },
                "source_file": "lessons/fast-track/if/info.yml",
                "static_files": {},
                "title": "Conditions"
            },
            "fast-track/list": {
                "pages": {
                    "index": {
                        "attribution": [
                            "Based on the <a href=\"https://djangogirls.org/\">DjangoGirls tutorial</a>.",
                            "Partially based on the <a href=\"https://github.com/ggcarrots/django-carrots\">Geek Girls Carrots course</a>.",
                            "Translated to Czech by a group of volunteers.\nAmong others: David (dakf), Kristýna Kumpánová,\nVeronika Gabrielová, Tomáš Ehrlich, Anička Jaegerová,\nMatěj Stuchlík, Filip Sivák, Juraj M. Bezruček.",
                            "Edited for PyLadies CZ by Petr Viktorin, 2018.",
                            "Initial translation back to English by Petra Vidnerová and Karolina Surma, based on ChatGPT"
                        ],
                        "content": {
                            "path": "list/index.html"
                        },
                        "ids": [
                            "adding_to_the_list",
                            "lists",
                            "removal",
                            "selecting_elements",
                            "slicing",
                            "slicing_strings",
                            "solution-0",
                            "solution-1",
                            "solution-2",
                            "solution-3",
                            "solution-4",
                            "solution-5",
                            "summary"
                        ],
                        "license": "cc-by-sa-40",
                        "links": [
                            "#adding_to_the_list",
                            "#lists",
                            "#removal",
                            "#selecting_elements",
                            "#slicing",
                            "#slicing_strings",
                            "#summary",
                            "https://tutorial.djangogirls.org/en/",
                            "naucse:solution?solution=0",
                            "naucse:solution?solution=1",
                            "naucse:solution?solution=2",
                            "naucse:solution?solution=3",
                            "naucse:solution?solution=4",
                            "naucse:solution?solution=5"
                        ],
                        "slug": "index",
                        "solutions": [
                            {
                                "content": "<div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">lottery</span><span class=\"p\">)</span>\n<span class=\"go\">6</span>\n</pre></div><p>The function <code>len()</code> can determine not only the length of a string, but also the length of a list - that is, the number of its elements.</p>"
                            },
                            {
                                "content": "<div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">lottery</span>\n<span class=\"go\">[59, 42, 30, 19, 12, 3, 199]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">lottery</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"go\">42</span>\n</pre></div><p>No, you will receive the second element.</p>\n<p>Programmers count from zero. So if you want the first element, ask Python for element number zero.</p>\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">loterie</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"go\">42</span>\n</pre></div><p>At first, it's strange, but you can get used to it.</p>"
                            },
                            {
                                "content": "<div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">lottery</span>\n<span class=\"go\">[59, 42, 30, 19, 12, 3, 199]</span>\n\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">lottery</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"go\">19</span>\n</pre></div><p>Index 3 means the fourth element.</p>\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">lottery</span><span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">]</span>\n<span class=\"gt\">Traceback (most recent call last):</span>\n  File <span class=\"nb\">&quot;&lt;stdin&gt;&quot;</span>, line <span class=\"m\">1</span>, in <span class=\"n\">&lt;module&gt;</span>\n<span class=\"gr\">IndexError</span>: <span class=\"n\">list index out of range</span>\n</pre></div><p>Element with index 7 does not exist - it results in error.</p>\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">loterie</span><span class=\"p\">[</span><span class=\"mi\">1000</span><span class=\"p\">]</span>\n<span class=\"gt\">Traceback (most recent call last):</span>\n  File <span class=\"nb\">&quot;&lt;stdin&gt;&quot;</span>, line <span class=\"m\">1</span>, in <span class=\"n\">&lt;module&gt;</span>\n<span class=\"gr\">IndexError</span>: <span class=\"n\">list index out of range</span>\n</pre></div><p>Same for index 1000.</p>\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">loterie</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"go\">199</span>\n</pre></div><p>Index -1 means the <em>last</em> element.</p>\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">loterie</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n<span class=\"go\">3</span>\n</pre></div><p>Index -2 means the one before the last element.</p>\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">loterie</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">6</span><span class=\"p\">]</span>\n<span class=\"go\">42</span>\n</pre></div><p>Index -6 means the sixth element from the end.</p>\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">loterie</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">100</span><span class=\"p\">]</span>\n<span class=\"gt\">Traceback (most recent call last):</span>\n  File <span class=\"nb\">&quot;&lt;stdin&gt;&quot;</span>, line <span class=\"m\">1</span>, in <span class=\"n\">&lt;module&gt;</span>\n<span class=\"gr\">IndexError</span>: <span class=\"n\">list index out of range</span>\n</pre></div><p>Such element does not exist, we get error.</p>"
                            },
                            {
                                "content": "<div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">del</span> <span class=\"n\">lottery</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">lottery</span>\n<span class=\"go\">[42, 30, 19, 12, 3]</span>\n</pre></div>"
                            },
                            {
                                "content": "<p>The last number has an index of -1, so I will select elements up to -1.</p>\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">numbers</span><span class=\"p\">[:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"go\">[&#39;First&#39;, &#39;Second&#39;, &#39;Third&#39;]</span>\n</pre></div><p>Do you also see a smiley face in the code for selecting everything except the last element?</p>"
                            },
                            {
                                "content": "<div class=\"highlight\"><pre><span></span><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Růžena&#39;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">name</span><span class=\"p\">[:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;y&#39;</span>\n<span class=\"s1\">&#39;Růženy&#39;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Krystýna&#39;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">name</span><span class=\"p\">[:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;y&#39;</span>\n<span class=\"s1\">&#39;Krystýny&#39;</span>\n</pre></div>"
                            }
                        ],
                        "source_file": "lessons/fast-track/list/index.md",
                        "title": "Lists",
                        "vars": {}
                    }
                },
                "source_file": "lessons/fast-track/list/info.yml",
                "static_files": {},
                "title": "Lists"
            },
            "fast-track/pyglet": {
                "pages": {
                    "index": {
                        "attribution": [
                            "Written by Petr Viktorin for PyLadies Brno, 2015-2018.",
                            "Initial translation to English by Petra Vidnerová, based on ChatGPT"
                        ],
                        "content": {
                            "path": "pyglet/index.html"
                        },
                        "ids": [
                            "animation",
                            "drawing",
                            "event_management",
                            "graphics",
                            "key_pressed",
                            "mouse_click",
                            "other_events",
                            "program_skeleton",
                            "solution-0",
                            "the_whole_program"
                        ],
                        "license": "cc-by-sa-40",
                        "links": [
                            "#animation",
                            "#drawing",
                            "#event_management",
                            "#graphics",
                            "#key_pressed",
                            "#mouse_click",
                            "#other_events",
                            "#program_skeleton",
                            "#the_whole_program",
                            "https://pyglet.readthedocs.io/en/latest/modules/window.html#pyglet.window.Window.on_activate",
                            "https://pyglet.readthedocs.io/en/latest/modules/window_key.html#key-constants",
                            "https://pyglet.readthedocs.io/en/latest/programming_guide/keyboard.html#motion-events",
                            "naucse:solution?solution=0"
                        ],
                        "slug": "index",
                        "solutions": [
                            {
                                "content": "<div class=\"highlight\"><pre><span></span><span class=\"nd\">@window</span><span class=\"o\">.</span><span class=\"n\">event</span>\n<span class=\"k\">def</span> <span class=\"nf\">on_text</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">):</span>\n    <span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">text</span> <span class=\"o\">+</span> <span class=\"n\">text</span>\n</pre></div>"
                            }
                        ],
                        "source_file": "lessons/fast-track/pyglet/index.md",
                        "title": "Intro to Pyglet",
                        "vars": {}
                    }
                },
                "source_file": "lessons/fast-track/pyglet/info.yml",
                "static_files": {},
                "title": "Intro to Pyglet"
            },
            "fast-track/random": {
                "pages": {
                    "index": {
                        "attribution": [
                            "Written by Petr Viktorin for PyLadies Brno, 2019.",
                            "Initial translation to English by Petra Vidnerová, based on ChatGPT"
                        ],
                        "content": {
                            "path": "random/index.html"
                        },
                        "ids": [
                            "random_selection",
                            "randomness",
                            "solution-0",
                            "summary"
                        ],
                        "license": "cc-by-sa-40",
                        "links": [
                            "#random_selection",
                            "#randomness",
                            "#summary",
                            "naucse:solution?solution=0"
                        ],
                        "slug": "index",
                        "solutions": [
                            {
                                "content": "<p>Numbers from 0 to 5 - not including 6.\nProgrammers count from zero, and when you count six numbers from zero,\nyou only get to five.</p>\n<p>When you want to 'roll the dice' - select numbers from 1 to 6 - you can write:</p>\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">random</span> <span class=\"kn\">import</span> <span class=\"n\">randrange</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">randrange</span><span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n<span class=\"go\">4</span>\n</pre></div>"
                            }
                        ],
                        "source_file": "lessons/fast-track/random/index.md",
                        "title": "Randomness",
                        "vars": {}
                    }
                },
                "source_file": "lessons/fast-track/random/info.yml",
                "static_files": {},
                "title": "Randomness"
            },
            "fast-track/repl": {
                "pages": {
                    "index": {
                        "attribution": [
                            "Based on the <a href=\"https://djangogirls.org/\">DjangoGirls tutorial</a>.",
                            "Partially based on the <a href=\"https://github.com/ggcarrots/django-carrots\">Geek Girls Carrots course</a>.",
                            "Translated to Czech by a group of volunteers.\nAmong others: David (dakf), Kristýna Kumpánová,\nVeronika Gabrielová, Tomáš Ehrlich, Anička Jaegerová,\nMatěj Stuchlík, Filip Sivák, Juraj M. Bezruček.",
                            "Edited for PyLadies CZ by Petr Viktorin, 2018.",
                            "Initial translation back to English by Petra Vidnerová and Karolina Surma, based on ChatGPT"
                        ],
                        "content": {
                            "path": "repl/index.html"
                        },
                        "ids": [
                            "errors",
                            "interactive_mode_of_python",
                            "summary"
                        ],
                        "license": "cc-by-sa-40",
                        "links": [
                            "#errors",
                            "#interactive_mode_of_python",
                            "#summary",
                            "https://tutorial.djangogirls.org/en/"
                        ],
                        "slug": "index",
                        "solutions": [],
                        "source_file": "lessons/fast-track/repl/index.md",
                        "title": "Python's interactive mode",
                        "vars": {}
                    }
                },
                "source_file": "lessons/fast-track/repl/info.yml",
                "static_files": {},
                "title": "Python's interactive mode"
            },
            "fast-track/script": {
                "pages": {
                    "index": {
                        "attribution": [
                            "Based on the <a href=\"https://djangogirls.org/\">DjangoGirls tutorial</a>.",
                            "Partially based on the <a href=\"https://github.com/ggcarrots/django-carrots\">Geek Girls Carrots course</a>.",
                            "Translated to Czech by a group of volunteers.\nAmong others: David (dakf), Kristýna Kumpánová,\nVeronika Gabrielová, Tomáš Ehrlich, Anička Jaegerová,\nMatěj Stuchlík, Filip Sivák, Juraj M. Bezruček.",
                            "Edited for PyLadies CZ by Petr Viktorin, 2018.",
                            "Initial translation back to English by Petra Vidnerová, based on ChatGPT"
                        ],
                        "content": {
                            "path": "script/index.html"
                        },
                        "ids": [
                            "comments",
                            "input",
                            "output",
                            "save_it",
                            "summary"
                        ],
                        "license": "cc-by-sa-40",
                        "links": [
                            "#comments",
                            "#input",
                            "#output",
                            "#save_it",
                            "#summary",
                            "https://tutorial.djangogirls.org/en/"
                        ],
                        "slug": "index",
                        "solutions": [],
                        "source_file": "lessons/fast-track/script/index.md",
                        "title": "Save it!",
                        "vars": {}
                    }
                },
                "source_file": "lessons/fast-track/script/info.yml",
                "static_files": {},
                "title": "Save it!"
            },
            "fast-track/str": {
                "pages": {
                    "index": {
                        "attribution": [
                            "Based on the <a href=\"https://djangogirls.org/\">DjangoGirls tutorial</a>.",
                            "Partially based on the <a href=\"https://github.com/ggcarrots/django-carrots\">Geek Girls Carrots course</a>.",
                            "Translated to Czech by a group of volunteers.\nAmong others: David (dakf), Kristýna Kumpánová,\nVeronika Gabrielová, Tomáš Ehrlich, Anička Jaegerová,\nMatěj Stuchlík, Filip Sivák, Juraj M. Bezruček.",
                            "Edited for PyLadies CZ by Petr Viktorin, 2018.",
                            "Initial translation back to English by Petra Vidnerová and Karolina Surma, based on ChatGPT"
                        ],
                        "content": {
                            "path": "str/index.html"
                        },
                        "ids": [
                            "expression_evaluation",
                            "functions_and_methods",
                            "quoting",
                            "solution-0",
                            "solution-1",
                            "solution-2",
                            "strings",
                            "summary"
                        ],
                        "license": "cc-by-sa-40",
                        "links": [
                            "#expression_evaluation",
                            "#functions_and_methods",
                            "#quoting",
                            "#strings",
                            "#summary",
                            "https://tutorial.djangogirls.org/en/",
                            "naucse:solution?solution=0",
                            "naucse:solution?solution=1",
                            "naucse:solution?solution=2",
                            "naucse:static?filename=quote-comic.svg"
                        ],
                        "slug": "index",
                        "solutions": [
                            {
                                "content": "<div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"mi\">123</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;class &#39;int&#39;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"s1\">&#39;abc&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;class &#39;str&#39;&gt;</span>\n</pre></div>"
                            },
                            {
                                "content": "<div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">&#39;Ola&#39;</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n<span class=\"go\">&#39;ola&#39;</span>\n</pre></div>"
                            },
                            {
                                "content": "<p><code>len('Ola') + 1</code> → <code>3 + 1</code> → <code>4</code></p>\n<p><code>'I am ' + 'Ola'.upper()</code> → <code>'I am ' + 'OLA'</code> → <code>'I am OLA'</code></p>\n<p><code>len('Ola' * 3)</code> → <code>len('OlaOlaOla')</code> → <code>9</code></p>\n<p><code>len('Ola'.upper())</code> →<code>len('OLA')</code> → <code>3</code></p>"
                            }
                        ],
                        "source_file": "lessons/fast-track/str/index.md",
                        "title": "Strings",
                        "vars": {}
                    }
                },
                "source_file": "lessons/fast-track/str/info.yml",
                "static_files": {
                    "quote-comic.svg": {
                        "path": "str/quote-comic.svg"
                    }
                },
                "title": "Strings"
            },
            "fast-track/tuple": {
                "pages": {
                    "index": {
                        "attribution": [
                            "Written by Petr Viktorin for PyLadies Brno, 2018.",
                            "Initial translation to English by Petra Vidnerová, based on ChatGPT"
                        ],
                        "content": {
                            "path": "tuple/index.html"
                        },
                        "ids": [
                            "summary",
                            "varnvar-tuple",
                            "zip"
                        ],
                        "license": "cc-by-sa-40",
                        "links": [
                            "#summary",
                            "#varnvar-tuple",
                            "#zip"
                        ],
                        "slug": "index",
                        "solutions": [],
                        "source_file": "lessons/fast-track/tuple/index.md",
                        "title": "Tuples and unpacking",
                        "vars": {}
                    }
                },
                "source_file": "lessons/fast-track/tuple/info.yml",
                "static_files": {},
                "title": "Tuples and unpacking"
            },
            "fast-track/variables": {
                "pages": {
                    "index": {
                        "attribution": [
                            "Based on the <a href=\"https://djangogirls.org/\">DjangoGirls tutorial</a>.",
                            "Partially based on the <a href=\"https://github.com/ggcarrots/django-carrots\">Geek Girls Carrots course</a>.",
                            "Translated to Czech by a group of volunteers.\nAmong others: David (dakf), Kristýna Kumpánová,\nVeronika Gabrielová, Tomáš Ehrlich, Anička Jaegerová,\nMatěj Stuchlík, Filip Sivák, Juraj M. Bezruček.",
                            "Edited for PyLadies CZ by Petr Viktorin, 2018.",
                            "Initial translation back to English by Petra Vidnerová and Karolina Surma, based on ChatGPT"
                        ],
                        "content": {
                            "path": "variables/index.html"
                        },
                        "ids": [
                            "solution-0",
                            "solution-1",
                            "summary",
                            "variable_names",
                            "variables"
                        ],
                        "license": "cc-by-sa-40",
                        "links": [
                            "#summary",
                            "#variable_names",
                            "#variables",
                            "https://tutorial.djangogirls.org/en/",
                            "naucse:solution?solution=0",
                            "naucse:solution?solution=1"
                        ],
                        "slug": "index",
                        "solutions": [
                            {
                                "content": "<div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">city</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Tokyo&quot;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ccity</span>\n<span class=\"gt\">Traceback (most recent call last):</span>\n  File <span class=\"nb\">&quot;&lt;stdin&gt;&quot;</span>, line <span class=\"m\">1</span>, in <span class=\"n\">&lt;module&gt;</span>\n<span class=\"gr\">NameError</span>: <span class=\"n\">name &#39;ccity&#39; is not defined</span>\n</pre></div>"
                            },
                            {
                                "content": "<ul>\n<li><code>button5</code> yes</li>\n<li><code>5button</code> no: names must start with a letter</li>\n<li><code>button</code> yes</li>\n<li><code>favorite color</code> no: that's not one name, but two!</li>\n<li><code>favorite-color</code> also no: Python interprets it as substracting two variables (<code>favourite</code> minut <code>color</code>)</li>\n<li><code>favoriteColor</code>yes: but it's better to avoid capital letters</li>\n</ul>"
                            }
                        ],
                        "source_file": "lessons/fast-track/variables/index.md",
                        "title": "Variables",
                        "vars": {}
                    }
                },
                "source_file": "lessons/fast-track/variables/info.yml",
                "static_files": {},
                "title": "Variables"
            },
            "snake/drawing": {
                "pages": {
                    "index": {
                        "attribution": [
                            "Written by Petr Viktorin for PyLadies Brno, 2018.",
                            "Initial translation to English by Petra Vidnerová, based on ChatGPT"
                        ],
                        "content": {
                            "path": "drawing/index.html"
                        },
                        "ids": [
                            "caterpillar",
                            "draw_me_a_snake",
                            "drawing_a_snake",
                            "feeding",
                            "how_to_choose_squares",
                            "loading_snake_pieces",
                            "logical_and_screen_coordinates",
                            "profi_software",
                            "representation_of_a_snake",
                            "solution-0",
                            "solution-1",
                            "solution-2",
                            "solution-3",
                            "square_setting"
                        ],
                        "license": "cc-by-sa-40",
                        "links": [
                            "#caterpillar",
                            "#draw_me_a_snake",
                            "#drawing_a_snake",
                            "#feeding",
                            "#how_to_choose_squares",
                            "#loading_snake_pieces",
                            "#logical_and_screen_coordinates",
                            "#profi_software",
                            "#representation_of_a_snake",
                            "#square_setting",
                            "naucse:page?lesson=snake/logic",
                            "naucse:page?lesson=snake/tile-selection",
                            "naucse:solution?solution=0",
                            "naucse:solution?solution=1",
                            "naucse:solution?solution=2",
                            "naucse:solution?solution=3",
                            "naucse:static?filename=apple.png",
                            "naucse:static?filename=caterpillar.png",
                            "naucse:static?filename=coords-blocks.svg",
                            "naucse:static?filename=coords-px.svg",
                            "naucse:static?filename=coords.svg",
                            "naucse:static?filename=green.png",
                            "naucse:static?filename=screenshot-dir.png",
                            "naucse:static?filename=snake-tiles.zip",
                            "naucse:static?filename=snake-tiles/end-end.png",
                            "naucse:static?filename=tile-selection.svg"
                        ],
                        "slug": "index",
                        "solutions": [
                            {
                                "content": "<div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">pyglet</span>\n\n<span class=\"n\">TILE_SIZE</span> <span class=\"o\">=</span> <span class=\"mi\">64</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">GameState</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">initialize</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">snake</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)]</span>\n\n<span class=\"n\">state</span> <span class=\"o\">=</span> <span class=\"n\">GameState</span><span class=\"p\">()</span>\n<span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">initialize</span><span class=\"p\">()</span>\n\n<span class=\"n\">green_image</span> <span class=\"o\">=</span> <span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">&#39;green.png&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">window</span> <span class=\"o\">=</span> <span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">Window</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@window</span><span class=\"o\">.</span><span class=\"n\">event</span>\n<span class=\"k\">def</span> <span class=\"nf\">on_draw</span><span class=\"p\">():</span>\n    <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n    <span class=\"n\">green_image</span><span class=\"o\">.</span><span class=\"n\">blit</span><span class=\"p\">(</span><span class=\"mi\">4</span> <span class=\"o\">*</span> <span class=\"n\">TILE_SIZE</span><span class=\"p\">,</span> <span class=\"mi\">5</span> <span class=\"o\">*</span> <span class=\"n\">TILE_SIZE</span><span class=\"p\">,</span>\n                     <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"n\">TILE_SIZE</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"n\">TILE_SIZE</span><span class=\"p\">)</span>\n\n<span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre></div>"
                            },
                            {
                                "content": "<div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">pyglet</span>\n\n<span class=\"n\">TILE_SIZE</span> <span class=\"o\">=</span> <span class=\"mi\">64</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">GameState</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">initialize</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">snake</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">draw</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">snake</span><span class=\"p\">:</span>\n            <span class=\"n\">green_image</span><span class=\"o\">.</span><span class=\"n\">blit</span><span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">*</span> <span class=\"n\">TILE_SIZE</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">*</span> <span class=\"n\">TILE_SIZE</span><span class=\"p\">,</span>\n                             <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"n\">TILE_SIZE</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"n\">TILE_SIZE</span><span class=\"p\">)</span>\n\n<span class=\"n\">state</span> <span class=\"o\">=</span> <span class=\"n\">GameState</span><span class=\"p\">()</span>\n<span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">initialize</span><span class=\"p\">()</span>\n\n<span class=\"n\">green_image</span> <span class=\"o\">=</span> <span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">&#39;green.png&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">window</span> <span class=\"o\">=</span> <span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">Window</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@window</span><span class=\"o\">.</span><span class=\"n\">event</span>\n<span class=\"k\">def</span> <span class=\"nf\">on_draw</span><span class=\"p\">():</span>\n    <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n    <span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">draw</span><span class=\"p\">()</span>\n\n<span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre></div>"
                            },
                            {
                                "content": "<div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">pyglet</span>\n\n<span class=\"n\">TILE_SIZE</span> <span class=\"o\">=</span> <span class=\"mi\">64</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">GameState</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">initialize</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">snake</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">food</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">draw</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">snake</span><span class=\"p\">:</span>\n            <span class=\"n\">green_image</span><span class=\"o\">.</span><span class=\"n\">blit</span><span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">*</span> <span class=\"n\">TILE_SIZE</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">*</span> <span class=\"n\">TILE_SIZE</span><span class=\"p\">,</span>\n                             <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"n\">TILE_SIZE</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"n\">TILE_SIZE</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">food</span><span class=\"p\">:</span>\n            <span class=\"n\">apple_image</span><span class=\"o\">.</span><span class=\"n\">blit</span><span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">*</span> <span class=\"n\">TILE_SIZE</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">*</span> <span class=\"n\">TILE_SIZE</span><span class=\"p\">,</span>\n                             <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"n\">TILE_SIZE</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"n\">TILE_SIZE</span><span class=\"p\">)</span>\n\n<span class=\"n\">state</span> <span class=\"o\">=</span> <span class=\"n\">GameState</span><span class=\"p\">()</span>\n<span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">initialize</span><span class=\"p\">()</span>\n\n<span class=\"n\">apple_image</span> <span class=\"o\">=</span> <span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">&#39;apple.png&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">green_image</span> <span class=\"o\">=</span> <span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">&#39;green.png&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">window</span> <span class=\"o\">=</span> <span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">Window</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@window</span><span class=\"o\">.</span><span class=\"n\">event</span>\n<span class=\"k\">def</span> <span class=\"nf\">on_draw</span><span class=\"p\">():</span>\n    <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n    <span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">draw</span><span class=\"p\">()</span>\n\n<span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre></div>"
                            },
                            {
                                "content": "<div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">pyglet</span>\n\n<span class=\"n\">TILE_SIZE</span> <span class=\"o\">=</span> <span class=\"mi\">64</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">GameState</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">initialize</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">snake</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">food</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">draw</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">snake</span><span class=\"p\">:</span>\n            <span class=\"n\">snake_tiles</span><span class=\"p\">[</span><span class=\"s1\">&#39;end-end&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">blit</span><span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">*</span> <span class=\"n\">TILE_SIZE</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">*</span> <span class=\"n\">TILE_SIZE</span><span class=\"p\">,</span>\n                                        <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"n\">TILE_SIZE</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"n\">TILE_SIZE</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">food</span><span class=\"p\">:</span>\n            <span class=\"n\">apple_image</span><span class=\"o\">.</span><span class=\"n\">blit</span><span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">*</span> <span class=\"n\">TILE_SIZE</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">*</span> <span class=\"n\">TILE_SIZE</span><span class=\"p\">,</span>\n                             <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"n\">TILE_SIZE</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"n\">TILE_SIZE</span><span class=\"p\">)</span>\n\n<span class=\"n\">state</span> <span class=\"o\">=</span> <span class=\"n\">GameState</span><span class=\"p\">()</span>\n<span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">initialize</span><span class=\"p\">()</span>\n\n<span class=\"n\">apple_image</span> <span class=\"o\">=</span> <span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">&#39;apple.png&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">green_image</span> <span class=\"o\">=</span> <span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">&#39;green.png&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">snake_tiles</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n<span class=\"k\">for</span> <span class=\"n\">start</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s1\">&#39;bottom&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;end&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;left&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;right&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;top&#39;</span><span class=\"p\">]:</span>\n    <span class=\"k\">for</span> <span class=\"n\">end</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s1\">&#39;bottom&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;end&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;left&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;right&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;top&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;dead&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;tongue&#39;</span><span class=\"p\">]:</span>\n        <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"n\">start</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;-&#39;</span> <span class=\"o\">+</span> <span class=\"n\">end</span>\n        <span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">&#39;snake-tiles/&#39;</span> <span class=\"o\">+</span> <span class=\"n\">key</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;.png&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">snake_tiles</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">image</span>\n\n<span class=\"n\">window</span> <span class=\"o\">=</span> <span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">Window</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@window</span><span class=\"o\">.</span><span class=\"n\">event</span>\n<span class=\"k\">def</span> <span class=\"nf\">on_draw</span><span class=\"p\">():</span>\n    <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n    <span class=\"c1\"># Lepší vykreslování (pro nás zatím kouzelné zaříkadlo)</span>\n    <span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">glEnable</span><span class=\"p\">(</span><span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">GL_BLEND</span><span class=\"p\">)</span>\n    <span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">glBlendFunc</span><span class=\"p\">(</span><span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">GL_SRC_ALPHA</span><span class=\"p\">,</span> <span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">GL_ONE_MINUS_SRC_ALPHA</span><span class=\"p\">)</span>\n\n    <span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">draw</span><span class=\"p\">()</span>\n\n<span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre></div>"
                            }
                        ],
                        "source_file": "lessons/snake/drawing/index.md",
                        "title": "Drawing the snake",
                        "vars": {}
                    }
                },
                "source_file": "lessons/snake/drawing/info.yml",
                "static_files": {
                    "apple.png": {
                        "path": "drawing/apple.png"
                    },
                    "caterpillar.png": {
                        "path": "drawing/caterpillar.png"
                    },
                    "coords-blocks.svg": {
                        "path": "drawing/coords-blocks.svg"
                    },
                    "coords-px.svg": {
                        "path": "drawing/coords-px.svg"
                    },
                    "coords.svg": {
                        "path": "drawing/coords.svg"
                    },
                    "green.png": {
                        "path": "drawing/green.png"
                    },
                    "red.png": {
                        "path": "drawing/red.png"
                    },
                    "screenshot-dir.png": {
                        "path": "drawing/screenshot-dir.png"
                    },
                    "screenshot-finished.png": {
                        "path": "drawing/screenshot-finished.png"
                    },
                    "screenshot-initial.png": {
                        "path": "drawing/screenshot-initial.png"
                    },
                    "snake-tiles.png": {
                        "path": "drawing/snake-tiles.png"
                    },
                    "snake-tiles.zip": {
                        "path": "drawing/snake-tiles.zip"
                    },
                    "snake-tiles/bottom-bottom.png": {
                        "path": "drawing/snake-tiles/bottom-bottom.png"
                    },
                    "snake-tiles/bottom-dead.png": {
                        "path": "drawing/snake-tiles/bottom-dead.png"
                    },
                    "snake-tiles/bottom-end.png": {
                        "path": "drawing/snake-tiles/bottom-end.png"
                    },
                    "snake-tiles/bottom-left.png": {
                        "path": "drawing/snake-tiles/bottom-left.png"
                    },
                    "snake-tiles/bottom-right.png": {
                        "path": "drawing/snake-tiles/bottom-right.png"
                    },
                    "snake-tiles/bottom-tongue.png": {
                        "path": "drawing/snake-tiles/bottom-tongue.png"
                    },
                    "snake-tiles/bottom-top.png": {
                        "path": "drawing/snake-tiles/bottom-top.png"
                    },
                    "snake-tiles/end-bottom.png": {
                        "path": "drawing/snake-tiles/end-bottom.png"
                    },
                    "snake-tiles/end-dead.png": {
                        "path": "drawing/snake-tiles/end-dead.png"
                    },
                    "snake-tiles/end-end.png": {
                        "path": "drawing/snake-tiles/end-end.png"
                    },
                    "snake-tiles/end-left.png": {
                        "path": "drawing/snake-tiles/end-left.png"
                    },
                    "snake-tiles/end-right.png": {
                        "path": "drawing/snake-tiles/end-right.png"
                    },
                    "snake-tiles/end-tongue.png": {
                        "path": "drawing/snake-tiles/end-tongue.png"
                    },
                    "snake-tiles/end-top.png": {
                        "path": "drawing/snake-tiles/end-top.png"
                    },
                    "snake-tiles/left-bottom.png": {
                        "path": "drawing/snake-tiles/left-bottom.png"
                    },
                    "snake-tiles/left-dead.png": {
                        "path": "drawing/snake-tiles/left-dead.png"
                    },
                    "snake-tiles/left-end.png": {
                        "path": "drawing/snake-tiles/left-end.png"
                    },
                    "snake-tiles/left-left.png": {
                        "path": "drawing/snake-tiles/left-left.png"
                    },
                    "snake-tiles/left-right.png": {
                        "path": "drawing/snake-tiles/left-right.png"
                    },
                    "snake-tiles/left-tongue.png": {
                        "path": "drawing/snake-tiles/left-tongue.png"
                    },
                    "snake-tiles/left-top.png": {
                        "path": "drawing/snake-tiles/left-top.png"
                    },
                    "snake-tiles/right-bottom.png": {
                        "path": "drawing/snake-tiles/right-bottom.png"
                    },
                    "snake-tiles/right-dead.png": {
                        "path": "drawing/snake-tiles/right-dead.png"
                    },
                    "snake-tiles/right-end.png": {
                        "path": "drawing/snake-tiles/right-end.png"
                    },
                    "snake-tiles/right-left.png": {
                        "path": "drawing/snake-tiles/right-left.png"
                    },
                    "snake-tiles/right-right.png": {
                        "path": "drawing/snake-tiles/right-right.png"
                    },
                    "snake-tiles/right-tongue.png": {
                        "path": "drawing/snake-tiles/right-tongue.png"
                    },
                    "snake-tiles/right-top.png": {
                        "path": "drawing/snake-tiles/right-top.png"
                    },
                    "snake-tiles/top-bottom.png": {
                        "path": "drawing/snake-tiles/top-bottom.png"
                    },
                    "snake-tiles/top-dead.png": {
                        "path": "drawing/snake-tiles/top-dead.png"
                    },
                    "snake-tiles/top-end.png": {
                        "path": "drawing/snake-tiles/top-end.png"
                    },
                    "snake-tiles/top-left.png": {
                        "path": "drawing/snake-tiles/top-left.png"
                    },
                    "snake-tiles/top-right.png": {
                        "path": "drawing/snake-tiles/top-right.png"
                    },
                    "snake-tiles/top-tongue.png": {
                        "path": "drawing/snake-tiles/top-tongue.png"
                    },
                    "snake-tiles/top-top.png": {
                        "path": "drawing/snake-tiles/top-top.png"
                    },
                    "tile-selection.svg": {
                        "path": "drawing/tile-selection.svg"
                    }
                },
                "title": "Drawing the snake"
            },
            "snake/handling": {
                "pages": {
                    "index": {
                        "attribution": [
                            "Written by Petr Viktorin for PyLadies Brno, 2019.",
                            "Initial translation to English by Petra Vidnerová, based on ChatGPT"
                        ],
                        "content": {
                            "path": "handling/index.html"
                        },
                        "ids": [
                            "improvement_of_snake_controls",
                            "not_a_step_back",
                            "queue_of_instructions"
                        ],
                        "license": "cc-by-sa-40",
                        "links": [
                            "#improvement_of_snake_controls",
                            "#not_a_step_back",
                            "#queue_of_instructions"
                        ],
                        "slug": "index",
                        "solutions": [],
                        "source_file": "lessons/snake/handling/index.md",
                        "title": "Snake extension: Better controls",
                        "vars": {}
                    }
                },
                "source_file": "lessons/snake/handling/info.yml",
                "static_files": {},
                "title": "Snake extension: Better controls"
            },
            "snake/logic": {
                "pages": {
                    "index": {
                        "attribution": [
                            "Written by Petr Viktorin for PyLadies Brno, 2018.",
                            "Initial translation to English by Petra Vidnerová, based on ChatGPT"
                        ],
                        "content": {
                            "path": "logic/index.html"
                        },
                        "ids": [
                            "and_thats_it",
                            "control",
                            "end",
                            "feeding",
                            "game_logic",
                            "lets_move_the_snake",
                            "new_food",
                            "pause",
                            "so_far_so_good_but_now_we_will_hit_a_bump",
                            "solution-0",
                            "solution-1",
                            "solution-2",
                            "solution-3",
                            "solution-4",
                            "solution-5",
                            "solution-6",
                            "solution-7",
                            "solution-8",
                            "whats_next"
                        ],
                        "license": "cc-by-sa-40",
                        "links": [
                            "#and_thats_it",
                            "#control",
                            "#end",
                            "#feeding",
                            "#game_logic",
                            "#lets_move_the_snake",
                            "#new_food",
                            "#pause",
                            "#so_far_so_good_but_now_we_will_hit_a_bump",
                            "#whats_next",
                            "https://pyglet.readthedocs.io/en/pyglet-1.3-maintenance/modules/window_key.html#key-constants",
                            "naucse:page?lesson=snake/handling",
                            "naucse:page?lesson=snake/toroid",
                            "naucse:solution?solution=0",
                            "naucse:solution?solution=1",
                            "naucse:solution?solution=2",
                            "naucse:solution?solution=3",
                            "naucse:solution?solution=4",
                            "naucse:solution?solution=5",
                            "naucse:solution?solution=6",
                            "naucse:solution?solution=7",
                            "naucse:solution?solution=8",
                            "naucse:static?filename=coord-vectors.svg"
                        ],
                        "slug": "index",
                        "solutions": [
                            {
                                "content": "<p>In the <code>move</code> method, it is necessary to set the variables <code>new_x</code> and <code>new_y</code> differently:</p>\n<p>For upward movement:</p>\n<div class=\"highlight\"><pre><span></span><span class=\"n\">new_x</span> <span class=\"o\">=</span> <span class=\"n\">old_x</span>\n<span class=\"n\">new_y</span> <span class=\"o\">=</span> <span class=\"n\">old_y</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n</pre></div><p>\"And down:\"</p>\n<div class=\"highlight\"><pre><span></span><span class=\"n\">new_x</span> <span class=\"o\">=</span> <span class=\"n\">old_x</span>\n<span class=\"n\">new_y</span> <span class=\"o\">=</span> <span class=\"n\">old_y</span> <span class=\"o\">-</span> <span class=\"mi\">1</span>\n</pre></div><p>This code sets the value of <code>new_x</code> to be the same as <code>old_x</code>, and sets the value of <code>new_y</code> to be one less than the value of <code>old_y</code>.</p>"
                            },
                            {
                                "content": "<p>def move(self):\n    old_x, old_y = self.snake[-1]\n    dir_x, dir_y = self.snake_direction\n    new_x = old_x + dir_x\n    new_y = old_y + dir_y</p>\n<div class=\"highlight\"><pre><code># Checking if the player has gone outside of the game area\nif new_x &lt; 0:\n    exit('GAME OVER')\nif new_y &lt; 0:\n    exit('GAME OVER')\nif new_x &gt;= self.width:\n    exit('GAME OVER')\nif new_y &gt;= self.height:\n    exit('GAME OVER')\n\nnew_head = new_x, new_y\nself.snake.append(new_head)\ndel self.snake[0]</code></pre></div>"
                            },
                            {
                                "content": "<div class=\"highlight\"><pre><span></span>        <span class=\"k\">if</span> <span class=\"n\">new_head</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">food</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">food</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">new_head</span><span class=\"p\">)</span>\n</pre></div>"
                            },
                            {
                                "content": "<div class=\"highlight\"><pre><span></span>    <span class=\"k\">def</span> <span class=\"nf\">move</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">old_x</span><span class=\"p\">,</span> <span class=\"n\">old_y</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">snake</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"n\">dir_x</span><span class=\"p\">,</span> <span class=\"n\">dir_y</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">snake_direction</span>\n        <span class=\"n\">new_x</span> <span class=\"o\">=</span> <span class=\"n\">old_x</span> <span class=\"o\">+</span> <span class=\"n\">dir_x</span>\n        <span class=\"n\">new_y</span> <span class=\"o\">=</span> <span class=\"n\">old_y</span> <span class=\"o\">+</span> <span class=\"n\">dir_y</span>\n        <span class=\"n\">new_head</span> <span class=\"o\">=</span> <span class=\"n\">new_x</span><span class=\"p\">,</span> <span class=\"n\">new_y</span>\n\n        <span class=\"c1\"># Kontrola vylezení z hrací plochy</span>\n        <span class=\"k\">if</span> <span class=\"n\">new_x</span> <span class=\"o\">&lt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"s1\">&#39;GAME OVER&#39;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">new_y</span> <span class=\"o\">&lt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"s1\">&#39;GAME OVER&#39;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">new_x</span> <span class=\"o\">&gt;=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">width</span><span class=\"p\">:</span>\n            <span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"s1\">&#39;GAME OVER&#39;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">new_y</span> <span class=\"o\">&gt;=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">height</span><span class=\"p\">:</span>\n            <span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"s1\">&#39;GAME OVER&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">snake</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">new_head</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">new_head</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">food</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">food</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">new_head</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">del</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">snake</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n</pre></div>"
                            },
                            {
                                "content": "<div class=\"highlight\"><pre><span></span>    <span class=\"k\">def</span> <span class=\"nf\">add_food</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randrange</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">width</span><span class=\"p\">)</span>\n        <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randrange</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">height</span><span class=\"p\">)</span>\n        <span class=\"n\">position</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">food</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">position</span><span class=\"p\">)</span>\n</pre></div>"
                            },
                            {
                                "content": "<p>In the <code>initialize</code> method, instead of setting <code>self.food</code> to a list with food positions, you can write:</p>\n<div class=\"highlight\"><pre><span></span>        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">food</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add_food</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add_food</span><span class=\"p\">()</span>\n</pre></div><p>Then at the beginning of the game, two random foods will be waiting for the snake.</p>"
                            },
                            {
                                "content": "<div class=\"highlight\"><pre><span></span>        <span class=\"c1\"># Checking if the snake has collided</span>\n        <span class=\"k\">if</span> <span class=\"n\">new_head</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">snake</span><span class=\"p\">:</span>\n            <span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"s1\">&#39;GAME OVER&#39;</span><span class=\"p\">)</span>\n</pre></div>"
                            },
                            {
                                "content": "<ul>\n<li>\"Initial attribute setting\" to the <code>initialize</code> method.</li>\n<li>\"Stopping the snake\" instead of <em>all</em> occurrences of <code>raise(\"Game Over\")</code>.</li>\n<li>\"Preventing movement\" at the very beginning of the <code>move</code> method (the <code>return</code> statement will immediately terminate the execution of the method).</li>\n<li>\"Graphic indication\" after the section for selecting the image for the snake piece.</li>\n</ul>"
                            },
                            {
                                "content": "<div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">random</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pyglet</span>\n\n<span class=\"n\">TILE_SIZE</span> <span class=\"o\">=</span> <span class=\"mi\">64</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">GameState</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">initialize</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">snake</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">snake_direction</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">width</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">height</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">food</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add_food</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add_food</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">alive</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">draw</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">snake</span><span class=\"p\">:</span>\n            <span class=\"n\">before</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;end&#39;</span>     <span class=\"c1\"># (Tady případně je nějaké</span>\n            <span class=\"n\">after</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;end&#39;</span>      <span class=\"c1\">#  složitější vybírání políčka)</span>\n            <span class=\"k\">if</span> <span class=\"n\">after</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;end&#39;</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">alive</span><span class=\"p\">:</span>\n                <span class=\"n\">after</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;dead&#39;</span>\n            <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"n\">before</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;-&#39;</span> <span class=\"o\">+</span> <span class=\"n\">after</span>\n            <span class=\"n\">snake_tiles</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">blit</span><span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">*</span> <span class=\"n\">TILE_SIZE</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">*</span> <span class=\"n\">TILE_SIZE</span><span class=\"p\">,</span>\n                                  <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"n\">TILE_SIZE</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"n\">TILE_SIZE</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">food</span><span class=\"p\">:</span>\n            <span class=\"n\">apple_image</span><span class=\"o\">.</span><span class=\"n\">blit</span><span class=\"p\">(</span>\n                <span class=\"n\">x</span> <span class=\"o\">*</span> <span class=\"n\">TILE_SIZE</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">*</span> <span class=\"n\">TILE_SIZE</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"n\">TILE_SIZE</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"n\">TILE_SIZE</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">move</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">alive</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span>\n\n        <span class=\"n\">old_x</span><span class=\"p\">,</span> <span class=\"n\">old_y</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">snake</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"n\">dir_x</span><span class=\"p\">,</span> <span class=\"n\">dir_y</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">snake_direction</span>\n        <span class=\"n\">new_x</span> <span class=\"o\">=</span> <span class=\"n\">old_x</span> <span class=\"o\">+</span> <span class=\"n\">dir_x</span>\n        <span class=\"n\">new_y</span> <span class=\"o\">=</span> <span class=\"n\">old_y</span> <span class=\"o\">+</span> <span class=\"n\">dir_y</span>\n\n        <span class=\"c1\"># Kontrola vylezení z hrací plochy</span>\n        <span class=\"k\">if</span> <span class=\"n\">new_x</span> <span class=\"o\">&lt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">alive</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"k\">if</span> <span class=\"n\">new_y</span> <span class=\"o\">&lt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">alive</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"k\">if</span> <span class=\"n\">new_x</span> <span class=\"o\">&gt;=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">width</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">alive</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"k\">if</span> <span class=\"n\">new_y</span> <span class=\"o\">&gt;=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">height</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">alive</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n        <span class=\"n\">new_head</span> <span class=\"o\">=</span> <span class=\"n\">new_x</span><span class=\"p\">,</span> <span class=\"n\">new_y</span>\n        <span class=\"k\">if</span> <span class=\"n\">new_head</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">snake</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">alive</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">snake</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">new_head</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">new_head</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">food</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">food</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">new_head</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add_food</span><span class=\"p\">()</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">del</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">snake</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">add_food</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">try_number</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">):</span>\n            <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randrange</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">width</span><span class=\"p\">)</span>\n            <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randrange</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">height</span><span class=\"p\">)</span>\n            <span class=\"n\">position</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">position</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">snake</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"p\">(</span><span class=\"n\">position</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">food</span><span class=\"p\">):</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">food</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">position</span><span class=\"p\">)</span>\n                <span class=\"k\">return</span>\n\n<span class=\"n\">apple_image</span> <span class=\"o\">=</span> <span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">&#39;apple.png&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">snake_tiles</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n<span class=\"k\">for</span> <span class=\"n\">start</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s1\">&#39;bottom&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;end&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;left&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;right&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;top&#39;</span><span class=\"p\">]:</span>\n    <span class=\"k\">for</span> <span class=\"n\">end</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s1\">&#39;bottom&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;end&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;left&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;right&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;top&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;dead&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;tongue&#39;</span><span class=\"p\">]:</span>\n        <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"n\">start</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;-&#39;</span> <span class=\"o\">+</span> <span class=\"n\">end</span>\n        <span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">&#39;snake-tiles/&#39;</span> <span class=\"o\">+</span> <span class=\"n\">key</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;.png&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">snake_tiles</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">image</span>\n\n<span class=\"n\">window</span> <span class=\"o\">=</span> <span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">Window</span><span class=\"p\">()</span>\n\n<span class=\"n\">state</span> <span class=\"o\">=</span> <span class=\"n\">GameState</span><span class=\"p\">()</span>\n<span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">initialize</span><span class=\"p\">()</span>\n<span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">width</span> <span class=\"o\">=</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">width</span> <span class=\"o\">//</span> <span class=\"n\">TILE_SIZE</span>\n<span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">height</span> <span class=\"o\">=</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">height</span> <span class=\"o\">//</span> <span class=\"n\">TILE_SIZE</span>\n\n\n<span class=\"nd\">@window</span><span class=\"o\">.</span><span class=\"n\">event</span>\n<span class=\"k\">def</span> <span class=\"nf\">on_draw</span><span class=\"p\">():</span>\n    <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n    <span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">glEnable</span><span class=\"p\">(</span><span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">GL_BLEND</span><span class=\"p\">)</span>\n    <span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">glBlendFunc</span><span class=\"p\">(</span><span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">GL_SRC_ALPHA</span><span class=\"p\">,</span> <span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">GL_ONE_MINUS_SRC_ALPHA</span><span class=\"p\">)</span>\n    <span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">draw</span><span class=\"p\">()</span>\n\n\n<span class=\"nd\">@window</span><span class=\"o\">.</span><span class=\"n\">event</span>\n<span class=\"k\">def</span> <span class=\"nf\">on_key_press</span><span class=\"p\">(</span><span class=\"n\">key_code</span><span class=\"p\">,</span> <span class=\"n\">modifier</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">key_code</span> <span class=\"o\">==</span> <span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">LEFT</span><span class=\"p\">:</span>\n        <span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">snake_direction</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span>\n    <span class=\"k\">if</span> <span class=\"n\">key_code</span> <span class=\"o\">==</span> <span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">RIGHT</span><span class=\"p\">:</span>\n        <span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">snake_direction</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span>\n    <span class=\"k\">if</span> <span class=\"n\">key_code</span> <span class=\"o\">==</span> <span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">DOWN</span><span class=\"p\">:</span>\n        <span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">snake_direction</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span>\n    <span class=\"k\">if</span> <span class=\"n\">key_code</span> <span class=\"o\">==</span> <span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">UP</span><span class=\"p\">:</span>\n        <span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">snake_direction</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">move</span><span class=\"p\">(</span><span class=\"n\">dt</span><span class=\"p\">):</span>\n    <span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">move</span><span class=\"p\">()</span>\n\n\n<span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">clock</span><span class=\"o\">.</span><span class=\"n\">schedule_interval</span><span class=\"p\">(</span><span class=\"n\">move</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n\n<span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre></div>"
                            }
                        ],
                        "source_file": "lessons/snake/logic/index.md",
                        "title": "Game logic",
                        "vars": {}
                    }
                },
                "source_file": "lessons/snake/logic/info.yml",
                "static_files": {
                    "coord-vectors.svg": {
                        "path": "logic/coord-vectors.svg"
                    }
                },
                "title": "Game logic"
            },
            "snake/tile-selection": {
                "pages": {
                    "index": {
                        "attribution": [
                            "Written by Petr Viktorin for PyLadies Brno, 2018-2019.",
                            "Initial translation to English by Petra Vidnerová, based on ChatGPT"
                        ],
                        "content": {
                            "path": "tile-selection/index.html"
                        },
                        "ids": [
                            "go_through_all_coordinates",
                            "picking_pieces_of_a_snake",
                            "simpler_subproblems",
                            "this_is_not_the_bible",
                            "to_find_out_the_direction"
                        ],
                        "license": "cc-by-sa-40",
                        "links": [
                            "#go_through_all_coordinates",
                            "#picking_pieces_of_a_snake",
                            "#simpler_subproblems",
                            "#this_is_not_the_bible",
                            "#to_find_out_the_direction",
                            "naucse:static?filename=lettered.svg",
                            "naucse:static?filename=snake-tiles/bottom-right.png",
                            "naucse:static?filename=snake-tiles/bottom-top.png",
                            "naucse:static?filename=snake-tiles/end-right.png",
                            "naucse:static?filename=snake-tiles/left-end.png",
                            "naucse:static?filename=snake-tiles/left-right.png",
                            "naucse:static?filename=snake-tiles/left-top.png",
                            "naucse:static?filename=tile-selection.svg"
                        ],
                        "slug": "index",
                        "solutions": [],
                        "source_file": "lessons/snake/tile-selection/index.md",
                        "title": "Snake tile selection",
                        "vars": {}
                    }
                },
                "source_file": "lessons/snake/tile-selection/info.yml",
                "static_files": {
                    "lettered.svg": {
                        "path": "tile-selection/lettered.svg"
                    },
                    "snake-tiles/bottom-bottom.png": {
                        "path": "tile-selection/snake-tiles/bottom-bottom.png"
                    },
                    "snake-tiles/bottom-dead.png": {
                        "path": "tile-selection/snake-tiles/bottom-dead.png"
                    },
                    "snake-tiles/bottom-end.png": {
                        "path": "tile-selection/snake-tiles/bottom-end.png"
                    },
                    "snake-tiles/bottom-left.png": {
                        "path": "tile-selection/snake-tiles/bottom-left.png"
                    },
                    "snake-tiles/bottom-right.png": {
                        "path": "tile-selection/snake-tiles/bottom-right.png"
                    },
                    "snake-tiles/bottom-tongue.png": {
                        "path": "tile-selection/snake-tiles/bottom-tongue.png"
                    },
                    "snake-tiles/bottom-top.png": {
                        "path": "tile-selection/snake-tiles/bottom-top.png"
                    },
                    "snake-tiles/end-bottom.png": {
                        "path": "tile-selection/snake-tiles/end-bottom.png"
                    },
                    "snake-tiles/end-dead.png": {
                        "path": "tile-selection/snake-tiles/end-dead.png"
                    },
                    "snake-tiles/end-end.png": {
                        "path": "tile-selection/snake-tiles/end-end.png"
                    },
                    "snake-tiles/end-left.png": {
                        "path": "tile-selection/snake-tiles/end-left.png"
                    },
                    "snake-tiles/end-right.png": {
                        "path": "tile-selection/snake-tiles/end-right.png"
                    },
                    "snake-tiles/end-tongue.png": {
                        "path": "tile-selection/snake-tiles/end-tongue.png"
                    },
                    "snake-tiles/end-top.png": {
                        "path": "tile-selection/snake-tiles/end-top.png"
                    },
                    "snake-tiles/left-bottom.png": {
                        "path": "tile-selection/snake-tiles/left-bottom.png"
                    },
                    "snake-tiles/left-dead.png": {
                        "path": "tile-selection/snake-tiles/left-dead.png"
                    },
                    "snake-tiles/left-end.png": {
                        "path": "tile-selection/snake-tiles/left-end.png"
                    },
                    "snake-tiles/left-left.png": {
                        "path": "tile-selection/snake-tiles/left-left.png"
                    },
                    "snake-tiles/left-right.png": {
                        "path": "tile-selection/snake-tiles/left-right.png"
                    },
                    "snake-tiles/left-tongue.png": {
                        "path": "tile-selection/snake-tiles/left-tongue.png"
                    },
                    "snake-tiles/left-top.png": {
                        "path": "tile-selection/snake-tiles/left-top.png"
                    },
                    "snake-tiles/right-bottom.png": {
                        "path": "tile-selection/snake-tiles/right-bottom.png"
                    },
                    "snake-tiles/right-dead.png": {
                        "path": "tile-selection/snake-tiles/right-dead.png"
                    },
                    "snake-tiles/right-end.png": {
                        "path": "tile-selection/snake-tiles/right-end.png"
                    },
                    "snake-tiles/right-left.png": {
                        "path": "tile-selection/snake-tiles/right-left.png"
                    },
                    "snake-tiles/right-right.png": {
                        "path": "tile-selection/snake-tiles/right-right.png"
                    },
                    "snake-tiles/right-tongue.png": {
                        "path": "tile-selection/snake-tiles/right-tongue.png"
                    },
                    "snake-tiles/right-top.png": {
                        "path": "tile-selection/snake-tiles/right-top.png"
                    },
                    "snake-tiles/top-bottom.png": {
                        "path": "tile-selection/snake-tiles/top-bottom.png"
                    },
                    "snake-tiles/top-dead.png": {
                        "path": "tile-selection/snake-tiles/top-dead.png"
                    },
                    "snake-tiles/top-end.png": {
                        "path": "tile-selection/snake-tiles/top-end.png"
                    },
                    "snake-tiles/top-left.png": {
                        "path": "tile-selection/snake-tiles/top-left.png"
                    },
                    "snake-tiles/top-right.png": {
                        "path": "tile-selection/snake-tiles/top-right.png"
                    },
                    "snake-tiles/top-tongue.png": {
                        "path": "tile-selection/snake-tiles/top-tongue.png"
                    },
                    "snake-tiles/top-top.png": {
                        "path": "tile-selection/snake-tiles/top-top.png"
                    },
                    "tile-selection.svg": {
                        "path": "tile-selection/tile-selection.svg"
                    }
                },
                "title": "Snake tile selection"
            },
            "snake/toroid": {
                "pages": {
                    "index": {
                        "attribution": [
                            "Written by Petr Viktorin for PyLadies Brno, 2018.",
                            "Initial translation to English by Petra Vidnerová, based on ChatGPT"
                        ],
                        "content": {
                            "path": "toroid/index.html"
                        },
                        "ids": [
                            "infinite_cage",
                            "rendering",
                            "residual_solution",
                            "solution-0"
                        ],
                        "license": "cc-by-sa-40",
                        "links": [
                            "#infinite_cage",
                            "#rendering",
                            "#residual_solution",
                            "https://docs.python.org/3/reference/expressions.html#binary-arithmetic-operations",
                            "https://en.wikipedia.org/wiki/Torus#Topology",
                            "naucse:solution?solution=0"
                        ],
                        "slug": "index",
                        "solutions": [
                            {
                                "content": "<div class=\"highlight\"><pre><span></span>        <span class=\"k\">if</span> <span class=\"n\">new_x</span> <span class=\"o\">&lt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">new_x</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">width</span> <span class=\"o\">-</span> <span class=\"mi\">1</span>\n        <span class=\"k\">if</span> <span class=\"n\">new_y</span> <span class=\"o\">&lt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">new_y</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">height</span> <span class=\"o\">-</span> <span class=\"mi\">1</span>\n        <span class=\"k\">if</span> <span class=\"n\">new_x</span> <span class=\"o\">&gt;=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">width</span><span class=\"p\">:</span>\n            <span class=\"n\">new_x</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">if</span> <span class=\"n\">new_y</span> <span class=\"o\">&gt;=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">height</span><span class=\"p\">:</span>\n            <span class=\"n\">new_y</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n</pre></div>"
                            }
                        ],
                        "source_file": "lessons/snake/toroid/index.md",
                        "title": "Snake extension: Infinite playground",
                        "vars": {}
                    }
                },
                "source_file": "lessons/snake/toroid/info.yml",
                "static_files": {},
                "title": "Snake extension: Infinite playground"
            }
        },
        "long_description": "<p>Do you want to learn how to program, but don't know where to start?\nWe have a workshop just for you!</p>\n<p>Under the guidance of an instructor, you will create a version of the classic video game Snake,\nwhich you may know from older Nokia phones.\nYou will experience writing code firsthand,\nlearn basic programming concepts, and see what it's like\nwhen the computer stops acting funny and starts following your commands.</p>\n<p>(If you think the project is not practical enough, don't despair! Rather than being about the game itself,\nthe focus is on basic programming principles that you can use later on,\nfor example, when creating web applications, analyzing data, machine learning,\nprogramming robots, or designing system tools.)</p>\n<p>The workshop is for complete beginners.\nYou don't need to know anything about programming, just have a computer and know how to use it\n(e.g. open/save a file, install a program).</p>\n<p>The workshop is in English and free of charge.\nHowever, capacity is limited and registration through the <a href=\"https://ep2023.europython.eu/pyladies-workshop\">EuroPython</a> website is required.</p>",
        "place": "Prague Congress Centre",
        "sessions": [
            {
                "materials": [
                    {
                        "lesson_slug": "beginners/cmdline",
                        "title": "Command Line",
                        "type": "lesson"
                    },
                    {
                        "lesson_slug": "beginners/install",
                        "title": "Python installation",
                        "type": "lesson"
                    },
                    {
                        "lesson_slug": "beginners/venv-setup",
                        "title": "Virtual environment setup",
                        "type": "lesson"
                    },
                    {
                        "lesson_slug": "beginners/install-editor",
                        "title": "Editor installation",
                        "type": "lesson"
                    }
                ],
                "serial": "0",
                "slug": "preparation",
                "source_file": "course.yml",
                "title": "Preparation"
            },
            {
                "date": "2023-07-17",
                "materials": [
                    {
                        "external_url": "https://pyvec.github.io/cheatsheets/keyboard/keyboard-cs.pdf",
                        "title": "(Czech) Keyboard layout cheatsheet (PDF)",
                        "type": "cheatsheet"
                    },
                    {
                        "lesson_slug": "fast-track/repl",
                        "title": "Python's interactive mode",
                        "type": "lesson"
                    },
                    {
                        "lesson_slug": "fast-track/str",
                        "title": "Strings",
                        "type": "lesson"
                    },
                    {
                        "lesson_slug": "fast-track/conversion",
                        "title": "Type conversion",
                        "type": "lesson"
                    },
                    {
                        "lesson_slug": "fast-track/variables",
                        "title": "Variables",
                        "type": "lesson"
                    },
                    {
                        "lesson_slug": "fast-track/list",
                        "title": "Lists",
                        "type": "lesson"
                    },
                    {
                        "lesson_slug": "fast-track/random",
                        "title": "Randomness",
                        "type": "lesson"
                    },
                    {
                        "lesson_slug": "fast-track/dict",
                        "title": "Dictionaries",
                        "type": "lesson"
                    },
                    {
                        "lesson_slug": "fast-track/bool",
                        "title": "Comparison and logic",
                        "type": "lesson"
                    },
                    {
                        "lesson_slug": "fast-track/script",
                        "title": "Save it!",
                        "type": "lesson"
                    },
                    {
                        "lesson_slug": "fast-track/if",
                        "title": "Conditions",
                        "type": "lesson"
                    },
                    {
                        "lesson_slug": "fast-track/def",
                        "title": "Defining functions",
                        "type": "lesson"
                    },
                    {
                        "lesson_slug": "fast-track/for",
                        "title": "Loops",
                        "type": "lesson"
                    },
                    {
                        "lesson_slug": "fast-track/tuple",
                        "title": "Tuples and unpacking",
                        "type": "lesson"
                    },
                    {
                        "lesson_slug": "fast-track/class",
                        "title": "Classes",
                        "type": "lesson"
                    }
                ],
                "serial": "1",
                "slug": "intro",
                "source_file": "course.yml",
                "time": {
                    "end": "12:45",
                    "start": "8:30"
                },
                "title": "Introduction to Python"
            },
            {
                "date": "2023-07-17",
                "materials": [
                    {
                        "lesson_slug": "fast-track/pyglet",
                        "title": "Intro to Pyglet",
                        "type": "lesson"
                    },
                    {
                        "lesson_slug": "snake/drawing",
                        "title": "Drawing the snake",
                        "type": "lesson"
                    },
                    {
                        "lesson_slug": "snake/logic",
                        "title": "Game logic",
                        "type": "lesson"
                    }
                ],
                "serial": "2",
                "slug": "workshop",
                "source_file": "course.yml",
                "time": {
                    "end": "18:00",
                    "start": "13:45"
                },
                "title": "The Snake"
            },
            {
                "materials": [
                    {
                        "lesson_slug": "snake/handling",
                        "title": "Snake extension: Better controls",
                        "type": "lesson"
                    },
                    {
                        "lesson_slug": "snake/toroid",
                        "title": "Snake extension: Infinite playground",
                        "type": "lesson"
                    },
                    {
                        "lesson_slug": "snake/tile-selection",
                        "title": "Snake tile selection",
                        "type": "lesson"
                    }
                ],
                "serial": "3",
                "slug": "extensions",
                "source_file": "course.yml",
                "title": "Extensions"
            }
        ],
        "source_file": "course.yml",
        "subtitle": "EuroPython",
        "time_description": "8:30 AM to 6:00 PM",
        "timezone": "Europe/Prague",
        "title": "Snake Workshop for PyLadies"
    }
}